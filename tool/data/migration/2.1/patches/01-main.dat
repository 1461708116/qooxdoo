\bqx\.bom\.element\.Overflow\.getX\((.*)\)=qx.bom.element.Style.get($1, 'overflowX')
\bqx\.bom\.element\.Overflow\.setX\((.*), (.*)\)=qx.bom.element.Style.set($1, 'overflowX', $2)
\bqx\.bom\.element\.Overflow\.resetX\((.*)\)=qx.bom.element.Style.reset($1, 'overflowX')
\bqx\.bom\.element\.Overflow\.compileX\((.*)\)=qx.bom.element.Style.get({'overflowX' : $1})

\bqx\.bom\.element\.Overflow\.getY\((.*)\)=qx.bom.element.Style.get($1, 'overflowY')
\bqx\.bom\.element\.Overflow\.setY\((.*), (.*)\)=qx.bom.element.Style.set($1, 'overflowY', $2)
\bqx\.bom\.element\.Overflow\.resetY\((.*)\)=qx.bom.element.Style.reset($1, 'overflowY')
\bqx\.bom\.element\.Overflow\.compileY\((.*)\)=qx.bom.element.Style.get({'overflowY' : $1})

\bqx\.bom\.element\.Overflow\.DEFAULT_SCROLLBAR_WIDTH\b=qx.ui.core.scroll.AbstractScrollArea.DEFAULT_SCROLLBAR_WIDTH
\bqx\.bom\.element\.Overflow\.getScrollbarWidth\b=qx.bom.element.Scroll.getScrollbarWidth

\bqx\.bom\.element\.Opacity\.SUPPORT_CSS3_OPACITY\b=qx.core.Environment.get('css.opacity')

\becmascript\.stacktrace\b=ecmascript.error.stacktrace

\bqx\.lang\.Date\.now\b=Date.now
\bqx\.lang\.String\.trim\((.*)\)=$1.trim()